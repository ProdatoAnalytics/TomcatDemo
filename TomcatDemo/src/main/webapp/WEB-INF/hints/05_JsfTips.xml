<?xml version="1.0" encoding="UTF-8"?>
<tns:tips xmlns:tns="http://www.example.org/NewXMLSchema"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.example.org/NewXMLSchema TipsSchema.xsd ">
    <tns:title>JSF</tns:title>
    <tns:description>JSF mit MyFaces</tns:description>
    <tns:tip>
        <tns:topic>Context Parameter</tns:topic>
        <tns:description>Viele einfache JSF-Kontextparameter können gesetzt werden. Manche wurden für das Projekt entfernt.</tns:description>
        <tns:locations>
            <tns:location>web.xml</tns:location>
        </tns:locations>
    </tns:tip>
    <tns:tip>
        <tns:topic>Jakarta EE 9</tns:topic>
        <tns:description>Ab Tomcat 10 müssen alle eingebundenen Libraries statt javax das paket jakarta includieren. Auf entsprechende Kompaitibilität muss geachtet werden.</tns:description>
        <tns:locations>
            <tns:location>build.gradle</tns:location>
        </tns:locations>
        <tns:tags>
            <tns:tag>Jakarta EE 9</tns:tag>
            <tns:tag>Tomcat</tns:tag>
            <tns:tag>Primefaces</tns:tag>
            <tns:tag>Myfaces</tns:tag>
        </tns:tags>
    </tns:tip>
    <tns:tip>
        <tns:topic>PhaseListener</tns:topic>
        <tns:description>Mit einem PhaseListener können die Phasen von Aktionen überwacht werden.</tns:description>
        <tns:locations>
            <tns:location>DebugPhaseListener</tns:location>
        </tns:locations>
        <tns:tags>
            <tns:tag>PhaseListener</tns:tag>
            <tns:tag>log4j</tns:tag>
            <tns:tag>faces-context.xml</tns:tag>
        </tns:tags>
    </tns:tip>
    <tns:tip>
        <tns:topic>Auskommentieren</tns:topic>
        <tns:description>Es gibt unterschiedliche Möglichkeiten, in JSF Code auszukommentieren.</tns:description>
        <tns:locations>
            <tns:location>remove.xhtml</tns:location>
        </tns:locations>
        <tns:tags>
            <tns:tag>ui:remove</tns:tag>
            <tns:tag>jsfc</tns:tag>
        </tns:tags>
    </tns:tip>
    <tns:tip>
        <tns:topic>Resource Library</tns:topic>
        <tns:description>Resource Libraries können entweder für unterschiedliche Themes (bei css, images etc.) verwendet werden, auch wenn das Theme statisch ist. Interessanter ist, dass man unterschiedliche Versionen verwenden kann. Auch wenn immer die neueste verwendet wird, werden aber Browser dazu gebracht, den Cache zu ignorieren und z.B. die CSS-Datei neu zu laden.</tns:description>
        <tns:locations>
            <tns:location>ResourceLibrary.xhtml, webapp/resources</tns:location>
        </tns:locations>
        <tns:tags>
            <tns:tag>library</tns:tag>
        </tns:tags>
    </tns:tip>
    <tns:tip>
        <tns:topic>Skipped Comments</tns:topic>
        <tns:description>Wenn Kommentare sich im generierten Code erhalten, kann das zu unerwünschten Nebeneffekten führen. Auskommentierter Code wird interpretiert oder als Zelle in Spalten eingesetzt.</tns:description>
        <tns:locations>
            <tns:location>web.xml</tns:location>
        </tns:locations>
        <tns:tags>
            <tns:tag>javax.faces.FACELETS_SKIP_COMMENTS</tns:tag>
        </tns:tags>
    </tns:tip>
    <tns:tip>
        <tns:topic>Log4j2 Custom Filter</tns:topic>
        <tns:description>Test für einen Custom Filter in Log4j2</tns:description>
        <tns:locations>
            <tns:location>log4j2.xml</tns:location>
            <tns:location>Log4j2CustomFilter.xhtml</tns:location>
        </tns:locations>
        <tns:tags>
            <tns:tag>log4j</tns:tag>
            <tns:tag>Filter</tns:tag>
        </tns:tags>    </tns:tip>

</tns:tips>
